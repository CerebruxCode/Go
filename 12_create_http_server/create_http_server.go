package main

import (
	"fmt"
	"net/http"
)

// Δημιουργία Web Server

/*
Στην Go, η δημιουργία ενός web server (εξυπηρετητής ιστοσελίδων) χρησιμοποιώντας το πακέτο net/http
είναι αρκετά εύκολη
Φυσικά το Web Development με την Go είναι ένας κλάδος απο μόνος του, οπότε εδώ θα αρκεστούμε
απλά στην δημιουργία μιας στατικής σελίδας.
Θα επικεντρωθούμε στην κατασκευή ενός απλού διακομιστή ο οποίος μπορεί να εξυπηρετήσει
ένα πολύ απλό περιεχόμενο σε έναν πελάτη που κάνει αιτήσεις σε αυτόν τον εξυπηρετητή μας.
*/

// Ας φτιάξουμε δυο func που θα προβάλουν το καθένα κάτι διαφορετικό ανάλογα με την
// διεύθυνση που θα πληκτρολογεί ο χρήστης. Στο παρόν παράδειγμα έστω ότι έχουμε
// μια κεντρική σελίδα και μια υποσελίδα με όνομα "earth". Αυτές οι σελίδες φυσικά
// δεν υπάρχουν στο σύστημα μας και τις φανταζόμαστε ως φακέλους τον έναν μέσα στον άλλον.
// Άρα όταν ο χρήστης θα πάει στην κεντρική σελίδα "localhost/" ("/") θα δει "Γεια σου Κόσμε"
// Όταν θα πάει στην "localhost/earth" ("/earth") θα δει "Γεια σου ΓΗ"

// Aπο το πακέτο http χρησιμοποιούμε τις:

// Η http.ResponseWriter συγκεντρώνει στην "w" την απάντηση που θα δώσει ο server μας και τι θα
// γράφει στην οθόνη του επισκέπτη (client)
// Η http.Request διαχειρίζεται το αίτημα του επισκέπτη (client) και την αποθηκεύει στην "r"
// Παραδοσιακά δίνονται τα ονόματα w, r, και υπονοούν μεταβλητές write και read
func handler(w http.ResponseWriter, r *http.Request) {

	fmt.Fprintf(w, "Γειά σου Κόσμε\n")
}

func handler2(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Γεια σου ΓΗ\n")
}

func main() {

	// Εδω χρησιμοποιούμε την http.HandleFunc και του λέμε τι να κάνει αν ο επισκέπτης
	// θέλει κάτι απο τον κατάλογο / (κεντρική σελίδα). ήτοι να τρέξει την handler
	http.HandleFunc("/", handler)

	// Εδω χρησιμοποιούμε την http.HandleFunc και του λέμε τι να κάνει αν ο επισκέπτης
	// θέλει κάτι απο τον κατάλογο /earth ήτοι να τρέξει την handler
	http.HandleFunc("/earth", handler2)

	// Με την http.ListenAndServe, όπως δηλώνει και το όνομά του, ξεκινάει ο server
	// να "ακούει" και να "εξυπηρετεί" τα αιτήματα στην port 8080 ήτοι localhost:8080/
	http.ListenAndServe(":8080", nil)
}

/*
Μόλις τρέξετε τον κώδικα π.χ. με go run create_http_server.go, θα δείτε οτι δεν εμφανίζεται κάτι στο τερματικό.
Ανοίξτε τον browser σας και επισκεφτείτε την σελίδα localhost:8080/ έπειτα και την σελίδα localhost:8080/earth
Για να σταματήσετε την εφαρμογή (τον διακομιστή) πατήστε τον συνδυασμό πλήκτρων CTRL+C
*/
